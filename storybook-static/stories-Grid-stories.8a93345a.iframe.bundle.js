"use strict";(self.webpackChunkreact_demo=self.webpackChunkreact_demo||[]).push([[903],{"./src/stories/Grid.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Grid_stories});__webpack_require__("./node_modules/react/index.js");var _templateObject,_templateObject2,taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const Container=styled_components_browser_esm.Ay.div(_templateObject||(_templateObject=(0,taggedTemplateLiteral.A)(["\n\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\ngap: 10px;\npadding: 20px;\n\n@media (max-width: 600px) {\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\n}\n\n@media (min-width: 600px) and (max-width: 1200px) {\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n}\n\n@media (min-width: 1200px) {\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n}\n"]))),GridItem=styled_components_browser_esm.Ay.div(_templateObject2||(_templateObject2=(0,taggedTemplateLiteral.A)(["\nbackground-color: #ccc;\npadding: 20px;\nborder: 1px solid #ddd;\ntext-align: center;\n"])));var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Grid=_ref=>{let{columns}=_ref;return(0,jsx_runtime.jsx)(Container,{style:{gridTemplateColumns:"repeat(".concat(columns,", 1fr)")},children:[...Array(10)].map(((_,index)=>(0,jsx_runtime.jsxs)(GridItem,{children:["Item ",index+1]},index)))})};Grid.__docgenInfo={description:"Grid component for displaying items in a responsive grid layout.\n\n@param columns - Number of columns in the grid\n@returns React component",methods:[],displayName:"Grid",props:{columns:{required:!0,tsType:{name:"number"},description:""}}};const Grid_stories={title:"Example/Grid",component:Grid,argTypes:{columns:{control:{type:"number",min:1,max:12}}},parameters:{docs:{description:{component:"Grid component for displaying items in a responsive grid layout."},source:{type:"code"}}}},Default=(args=>(0,jsx_runtime.jsx)(Grid,{...args})).bind({});Default.args={columns:3},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Grid {...args} />",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);